{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","hero","id","name","email","CardList","heroes","map","SearchBox","placeholder","handleChange","type","onChange","App","e","setState","searchField","target","value","state","fetch","then","response","json","users","this","filterdHeroes","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qTAGaA,G,kBAAO,SAACC,GAAD,OAChB,sBAAKC,UAAU,iBAAf,UACI,qBAAKC,IAAI,OAAOC,IAAG,+BAA0BH,EAAMI,KAAKC,GAArC,4BACnB,6BAAKL,EAAMI,KAAKE,OAChB,4BAAIN,EAAMI,KAAKG,aCFVC,EAAW,SAACR,GAAD,OACpB,qBAAKC,UAAU,YAAf,SAEQD,EAAMS,OAAOC,KAAI,SAAAN,GAAI,OACjB,cAAC,EAAD,CAAoBA,KAAMA,GAAfA,EAAKC,UCNnBM,G,MAAY,SAAC,GAAD,IAAGC,EAAH,EAAGA,YAAaC,EAAhB,EAAgBA,aAAhB,OACrB,uBACIZ,UAAU,SACVa,KAAK,SACLF,YAAaA,EACbG,SAAUF,MCmCHG,E,kDApCb,aAAe,IAAD,8BACZ,gBAWFH,aAAe,SAACI,GACd,EAAKC,SAAS,CAAEC,YAAaF,EAAEG,OAAOC,SAXtC,EAAKC,MAAQ,CACXb,OAAQ,GACRU,YAAa,IAJH,E,gEAOO,IAAD,OAClBI,MAAM,8CACHC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKT,SAAS,CAAET,OAAQkB,S,+BAKjC,IAAD,EACyBC,KAAKN,MAA7Bb,EADD,EACCA,OAAQU,EADT,EACSA,YACVU,EAAgBpB,EAAOqB,QAAO,SAAA1B,GAAI,OACtCA,EAAKE,KAAKyB,cAAcC,SAASb,EAAYY,kBAG/C,OACE,sBAAK9B,UAAU,MAAf,UACE,oBAAIA,UAAU,UAAd,0BACA,cAAC,EAAD,CACEW,YAAY,eACZC,aAAce,KAAKf,eACrB,cAAC,EAAD,CAAUJ,OAAQoB,W,GA5BRI,aCMHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.cd9d0758.chunk.js","sourcesContent":["import React from 'react';\r\nimport './card.styles.css'\r\n\r\nexport const Card = (props) => (\r\n    <div className='card-container'>\r\n        <img alt='hero' src={`https://robohash.org/${props.hero.id}?set=set2&size=180x180`} />\r\n        <h2>{props.hero.name}</h2>\r\n        <p>{props.hero.email}</p>\r\n    </div>\r\n)","import React from 'react';\r\nimport './card-list.styles.css';\r\nimport { Card } from '../card/card.component'\r\n\r\n\r\nexport const CardList = (props) => (\r\n    <div className='card-list'>\r\n        {\r\n            props.heroes.map(hero =>\r\n                <Card key={hero.id} hero={hero} />\r\n            )\r\n        }\r\n    </div >\r\n)","import React from 'react'\r\nimport './search-box.styles.css'\r\n\r\nexport const SearchBox = ({ placeholder, handleChange }) => (\r\n    <input\r\n        className='search'\r\n        type='search'\r\n        placeholder={placeholder}\r\n        onChange={handleChange}\r\n    />\r\n)","\nimport './App.css';\nimport React, { Component } from 'react'\nimport { CardList } from './components/card-list/card-list.component'\nimport { SearchBox } from './components/search-box/search-box.component'\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      heroes: [],\n      searchField: ''\n    }\n  }\n  componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/users')\n      .then(response => response.json())\n      .then(users => this.setState({ heroes: users }));\n  }\n  handleChange = (e) => {\n    this.setState({ searchField: e.target.value })\n  }\n  render() {\n    const { heroes, searchField } = this.state;\n    const filterdHeroes = heroes.filter(hero =>\n      hero.name.toLowerCase().includes(searchField.toLowerCase())\n    );\n\n    return (\n      <div className=\"App\">\n        <h1 className='hero-h1'>Heros Ground</h1>\n        <SearchBox\n          placeholder='search heros'\n          handleChange={this.handleChange} />\n        <CardList heroes={filterdHeroes}>\n        </CardList>\n      </div>\n    )\n  }\n}\n\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}